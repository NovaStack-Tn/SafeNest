# Generated by Django 4.2.10 on 2025-10-29 05:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Threat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "threat_type",
                    models.CharField(
                        choices=[
                            ("physical", "Physical Security"),
                            ("cyber", "Cyber Security"),
                            ("insider", "Insider Threat"),
                            ("terrorism", "Terrorism"),
                            ("fraud", "Fraud"),
                            ("data_breach", "Data Breach"),
                            ("social_engineering", "Social Engineering"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                            ("info", "Informational"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("investigating", "Investigating"),
                            ("confirmed", "Confirmed"),
                            ("mitigated", "Mitigated"),
                            ("resolved", "Resolved"),
                            ("false_positive", "False Positive"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="Where this threat was identified",
                        max_length=255,
                    ),
                ),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("ai_analyzed", models.BooleanField(default=False)),
                ("ai_confidence", models.FloatField(blank=True, null=True)),
                (
                    "ai_suggested_severity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                            ("info", "Informational"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("ai_analysis", models.JSONField(blank=True, default=dict)),
                ("first_detected", models.DateTimeField(blank=True, null=True)),
                ("last_activity", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_threats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_threats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threats",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RiskAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                            ("negligible", "Negligible"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "likelihood",
                    models.CharField(
                        choices=[
                            ("certain", "Certain"),
                            ("likely", "Likely"),
                            ("possible", "Possible"),
                            ("unlikely", "Unlikely"),
                            ("rare", "Rare"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "impact",
                    models.CharField(
                        choices=[
                            ("catastrophic", "Catastrophic"),
                            ("severe", "Severe"),
                            ("moderate", "Moderate"),
                            ("minor", "Minor"),
                            ("insignificant", "Insignificant"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "vulnerability_analysis",
                    models.TextField(help_text="What makes us vulnerable?"),
                ),
                (
                    "impact_analysis",
                    models.TextField(help_text="What could happen if exploited?"),
                ),
                (
                    "mitigation_strategy",
                    models.TextField(help_text="How to reduce or eliminate the risk"),
                ),
                (
                    "residual_risk",
                    models.TextField(
                        blank=True, help_text="Risk remaining after mitigation"
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Cost to mitigate",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("required_resources", models.TextField(blank=True)),
                (
                    "timeline",
                    models.CharField(
                        blank=True, help_text="Timeline for mitigation", max_length=255
                    ),
                ),
                ("ai_generated", models.BooleanField(default=False)),
                ("ai_confidence", models.FloatField(blank=True, null=True)),
                ("ai_recommendations", models.JSONField(blank=True, default=dict)),
                ("review_date", models.DateField(blank=True, null=True)),
                ("next_review_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assessed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="risk_assessments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_assessments",
                        to="core.organization",
                    ),
                ),
                (
                    "threat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_assessments",
                        to="threat_intelligence.threat",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("intrusion", "Intrusion Detection"),
                            ("anomaly", "Anomaly Detected"),
                            ("unauthorized_access", "Unauthorized Access"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("policy_violation", "Policy Violation"),
                            ("system", "System Alert"),
                            ("face_recognition", "Face Recognition"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                            ("info", "Informational"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("acknowledged", "Acknowledged"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("dismissed", "Dismissed"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="System component that generated alert",
                        max_length=255,
                    ),
                ),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threat_alerts",
                        to="core.organization",
                    ),
                ),
                (
                    "related_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="related_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "threat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alerts",
                        to="threat_intelligence.threat",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Watchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "watchlist_type",
                    models.CharField(
                        choices=[
                            ("person", "Person of Interest"),
                            ("vehicle", "Vehicle of Interest"),
                            ("organization", "Organization of Interest"),
                            ("location", "Location of Interest"),
                            ("device", "Device of Interest"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "subject_name",
                    models.CharField(help_text="Name or identifier", max_length=255),
                ),
                (
                    "subject_id",
                    models.CharField(
                        blank=True, help_text="ID number, plate, etc.", max_length=255
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("critical", "Critical Risk"),
                            ("high", "High Risk"),
                            ("medium", "Medium Risk"),
                            ("low", "Low Risk"),
                            ("monitor", "Monitor Only"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "reason",
                    models.TextField(help_text="Why this subject is on watchlist"),
                ),
                (
                    "attributes",
                    models.JSONField(
                        blank=True, default=dict, help_text="Type-specific attributes"
                    ),
                ),
                ("alert_on_detection", models.BooleanField(default=True)),
                (
                    "auto_notify",
                    models.JSONField(
                        blank=True, default=list, help_text="User IDs to notify"
                    ),
                ),
                (
                    "action_instructions",
                    models.TextField(blank=True, help_text="What to do if detected"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("detection_count", models.IntegerField(default=0)),
                ("last_detected", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True, help_text="When to remove from watchlist", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="watchlist_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watchlists",
                        to="core.organization",
                    ),
                ),
                (
                    "threat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="watchlist_entries",
                        to="threat_intelligence.threat",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["organization", "is_active"],
                        name="threat_inte_organiz_2995bc_idx",
                    ),
                    models.Index(
                        fields=["watchlist_type", "risk_level"],
                        name="threat_inte_watchli_b7014d_idx",
                    ),
                    models.Index(
                        fields=["subject_name"], name="threat_inte_subject_3298ac_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ThreatIndicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "indicator_type",
                    models.CharField(
                        choices=[
                            ("ip_address", "IP Address"),
                            ("domain", "Domain"),
                            ("url", "URL"),
                            ("file_hash", "File Hash"),
                            ("email", "Email Address"),
                            ("username", "Username"),
                            ("phone", "Phone Number"),
                            ("license_plate", "License Plate"),
                            ("device_id", "Device ID"),
                            ("pattern", "Behavior Pattern"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="The actual indicator value", max_length=500
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "confidence",
                    models.CharField(
                        choices=[
                            ("high", "High Confidence"),
                            ("medium", "Medium Confidence"),
                            ("low", "Low Confidence"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True, help_text="Where this IOC was found", max_length=255
                    ),
                ),
                ("first_seen", models.DateTimeField()),
                ("last_seen", models.DateTimeField()),
                ("occurrence_count", models.IntegerField(default=1)),
                ("is_active", models.BooleanField(default=True)),
                ("is_false_positive", models.BooleanField(default=False)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "action_taken",
                    models.TextField(
                        blank=True, help_text="Actions taken for this indicator"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_indicators",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threat_indicators",
                        to="core.organization",
                    ),
                ),
                (
                    "threat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indicators",
                        to="threat_intelligence.threat",
                    ),
                ),
            ],
            options={
                "ordering": ["-last_seen"],
                "indexes": [
                    models.Index(
                        fields=["organization", "is_active"],
                        name="threat_inte_organiz_462e65_idx",
                    ),
                    models.Index(
                        fields=["indicator_type", "value"],
                        name="threat_inte_indicat_3a3d1d_idx",
                    ),
                    models.Index(
                        fields=["last_seen"], name="threat_inte_last_se_a54b39_idx"
                    ),
                ],
                "unique_together": {("organization", "indicator_type", "value")},
            },
        ),
        migrations.AddIndex(
            model_name="threat",
            index=models.Index(
                fields=["organization", "status"], name="threat_inte_organiz_ca94a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="threat",
            index=models.Index(
                fields=["threat_type", "severity"],
                name="threat_inte_threat__2cfb4c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="threat",
            index=models.Index(
                fields=["created_at"], name="threat_inte_created_1fb2bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="riskassessment",
            index=models.Index(
                fields=["organization", "risk_level"],
                name="threat_inte_organiz_89a011_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="riskassessment",
            index=models.Index(
                fields=["threat"], name="threat_inte_threat__ac0588_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["organization", "status"], name="threat_inte_organiz_932890_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["alert_type", "severity"], name="threat_inte_alert_t_f18dbb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["created_at"], name="threat_inte_created_828b7d_idx"
            ),
        ),
    ]
