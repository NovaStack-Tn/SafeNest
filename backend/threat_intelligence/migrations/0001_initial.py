# Generated by Django 4.2.10 on 2025-10-29 04:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("access_control", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Threat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "threat_type",
                    models.CharField(
                        choices=[
                            ("malware", "Malware"),
                            ("phishing", "Phishing"),
                            ("unauthorized_access", "Unauthorized Access"),
                            ("data_breach", "Data Breach"),
                            ("insider_threat", "Insider Threat"),
                            ("physical_security", "Physical Security"),
                            ("social_engineering", "Social Engineering"),
                            ("ddos", "DDoS Attack"),
                            ("ransomware", "Ransomware"),
                            ("apt", "Advanced Persistent Threat"),
                            ("zero_day", "Zero Day Exploit"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("investigating", "Investigating"),
                            ("confirmed", "Confirmed"),
                            ("mitigated", "Mitigated"),
                            ("resolved", "Resolved"),
                            ("false_positive", "False Positive"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "risk_score",
                    models.FloatField(
                        default=0.0, help_text="AI-calculated risk score (0-100)"
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0, help_text="Confidence in threat detection (0-1)"
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        help_text="Detection source (AI, manual, external feed, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "external_ref",
                    models.CharField(
                        blank=True,
                        help_text="External reference ID (CVE, etc.)",
                        max_length=255,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("location_name", models.CharField(blank=True, max_length=255)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("attack_vector", models.JSONField(blank=True, default=dict)),
                ("impact_analysis", models.JSONField(blank=True, default=dict)),
                ("first_detected_at", models.DateTimeField(auto_now_add=True)),
                ("last_seen_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_threats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_threats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threats",
                        to="core.organization",
                    ),
                ),
                (
                    "related_access_points",
                    models.ManyToManyField(
                        blank=True,
                        related_name="threats",
                        to="access_control.accesspoint",
                    ),
                ),
                (
                    "related_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="related_threats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Threat",
                "verbose_name_plural": "Threats",
                "ordering": ["-first_detected_at"],
            },
        ),
        migrations.CreateModel(
            name="ThreatHuntingQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "query_text",
                    models.TextField(help_text="Natural language or SQL query"),
                ),
                (
                    "query_type",
                    models.CharField(
                        choices=[
                            ("natural_language", "Natural Language"),
                            ("sql", "SQL"),
                            ("dsl", "DSL"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "hypothesis",
                    models.TextField(blank=True, help_text="Threat hunting hypothesis"),
                ),
                ("expected_outcome", models.TextField(blank=True)),
                ("times_executed", models.IntegerField(default=0)),
                ("last_executed_at", models.DateTimeField(blank=True, null=True)),
                ("last_result_count", models.IntegerField(default=0)),
                ("findings", models.JSONField(blank=True, default=list)),
                ("is_public", models.BooleanField(default=False)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="threat_hunting_queries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threat_hunting_queries",
                        to="core.organization",
                    ),
                ),
                (
                    "threats_discovered",
                    models.ManyToManyField(
                        blank=True,
                        related_name="hunting_queries",
                        to="threat_intelligence.threat",
                    ),
                ),
            ],
            options={
                "verbose_name": "Threat Hunting Query",
                "verbose_name_plural": "Threat Hunting Queries",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="RiskAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "assessment_type",
                    models.CharField(
                        choices=[
                            ("user", "User Risk"),
                            ("location", "Location Risk"),
                            ("access_point", "Access Point Risk"),
                            ("event", "Event Risk"),
                            ("asset", "Asset Risk"),
                            ("network", "Network Risk"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("minimal", "Minimal"),
                            ("low", "Low"),
                            ("moderate", "Moderate"),
                            ("high", "High"),
                            ("severe", "Severe"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "risk_score",
                    models.FloatField(help_text="Calculated risk score (0-100)"),
                ),
                (
                    "likelihood",
                    models.FloatField(help_text="Likelihood of occurrence (0-1)"),
                ),
                ("impact", models.FloatField(help_text="Potential impact (0-1)")),
                (
                    "subject_identifier",
                    models.CharField(
                        blank=True,
                        help_text="Generic identifier for other subjects",
                        max_length=255,
                    ),
                ),
                (
                    "risk_factors",
                    models.JSONField(
                        default=list, help_text="List of identified risk factors"
                    ),
                ),
                (
                    "vulnerabilities",
                    models.JSONField(
                        default=list, help_text="Identified vulnerabilities"
                    ),
                ),
                (
                    "mitigation_recommendations",
                    models.JSONField(
                        default=list, help_text="Recommended mitigation actions"
                    ),
                ),
                (
                    "assessment_method",
                    models.CharField(help_text="AI model or manual", max_length=100),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("valid_from", models.DateTimeField(auto_now_add=True)),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("assessed_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assessed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="conducted_assessments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_assessments",
                        to="core.organization",
                    ),
                ),
                (
                    "subject_access_point",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_assessments",
                        to="access_control.accesspoint",
                    ),
                ),
                (
                    "subject_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_assessments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Risk Assessment",
                "verbose_name_plural": "Risk Assessments",
                "ordering": ["-assessed_at"],
            },
        ),
        migrations.CreateModel(
            name="Alert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("anomaly_detected", "Anomaly Detected"),
                            ("threshold_exceeded", "Threshold Exceeded"),
                            ("pattern_match", "Pattern Match"),
                            ("failed_login", "Failed Login"),
                            ("unauthorized_access", "Unauthorized Access"),
                            ("suspicious_activity", "Suspicious Activity"),
                            ("policy_violation", "Policy Violation"),
                            ("system_health", "System Health"),
                            ("threat_detected", "Threat Detected"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("acknowledged", "Acknowledged"),
                            ("investigating", "Investigating"),
                            ("resolved", "Resolved"),
                            ("false_positive", "False Positive"),
                            ("suppressed", "Suppressed"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                ("detection_method", models.CharField(max_length=100)),
                ("confidence_score", models.FloatField(default=0.0)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("is_aggregated", models.BooleanField(default=False)),
                ("aggregation_count", models.IntegerField(default=1)),
                ("source_data", models.JSONField(blank=True, default=dict)),
                ("context", models.JSONField(blank=True, default=dict)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("triggered_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "access_point",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="alerts",
                        to="access_control.accesspoint",
                    ),
                ),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_threat_intel_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_threat_intel_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threat_intel_alerts",
                        to="core.organization",
                    ),
                ),
                (
                    "parent_alert",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_alerts",
                        to="threat_intelligence.alert",
                    ),
                ),
                (
                    "threat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="threat_intelligence.threat",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="threat_intel_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Alert",
                "verbose_name_plural": "Alerts",
                "ordering": ["-triggered_at"],
            },
        ),
        migrations.CreateModel(
            name="Watchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "watchlist_type",
                    models.CharField(
                        choices=[
                            ("person", "Person"),
                            ("vehicle", "Vehicle"),
                            ("device", "Device"),
                            ("credential", "Credential"),
                            ("ip_address", "IP Address"),
                            ("email", "Email"),
                            ("organization", "Organization"),
                        ],
                        max_length=50,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "threat_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("expired", "Expired"),
                            ("resolved", "Resolved"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "subject_identifier",
                    models.CharField(
                        help_text="License plate, email, name, etc.", max_length=255
                    ),
                ),
                (
                    "alert_on_detection",
                    models.BooleanField(
                        default=True, help_text="Generate alert when detected"
                    ),
                ),
                (
                    "auto_block",
                    models.BooleanField(
                        default=False, help_text="Automatically block access"
                    ),
                ),
                ("times_detected", models.IntegerField(default=0)),
                ("last_detected_at", models.DateTimeField(blank=True, null=True)),
                (
                    "last_detected_location",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "reason",
                    models.TextField(help_text="Reason for watchlist inclusion"),
                ),
                ("notes", models.TextField(blank=True)),
                ("valid_from", models.DateTimeField(auto_now_add=True)),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_watchlist_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watchlists",
                        to="core.organization",
                    ),
                ),
                (
                    "related_threats",
                    models.ManyToManyField(
                        blank=True,
                        related_name="watchlist_entries",
                        to="threat_intelligence.threat",
                    ),
                ),
                (
                    "subject_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watchlist_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Watchlist Entry",
                "verbose_name_plural": "Watchlist Entries",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["organization", "status"],
                        name="threat_inte_organiz_ebea83_idx",
                    ),
                    models.Index(
                        fields=["watchlist_type", "status"],
                        name="threat_inte_watchli_d08104_idx",
                    ),
                    models.Index(
                        fields=["threat_level", "-created_at"],
                        name="threat_inte_threat__18f6e4_idx",
                    ),
                    models.Index(
                        fields=["subject_identifier"],
                        name="threat_inte_subject_5afc2b_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ThreatIndicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "indicator_type",
                    models.CharField(
                        choices=[
                            ("ip_address", "IP Address"),
                            ("domain", "Domain"),
                            ("url", "URL"),
                            ("email", "Email Address"),
                            ("file_hash", "File Hash"),
                            ("user_agent", "User Agent"),
                            ("behavior_pattern", "Behavior Pattern"),
                            ("credential", "Credential"),
                            ("geolocation", "Geolocation"),
                            ("device_fingerprint", "Device Fingerprint"),
                        ],
                        max_length=50,
                    ),
                ),
                ("indicator_value", models.TextField(help_text="The actual IOC value")),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("expired", "Expired"),
                            ("whitelisted", "Whitelisted"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("first_seen", models.DateTimeField(auto_now_add=True)),
                ("last_seen", models.DateTimeField(auto_now=True)),
                ("times_detected", models.IntegerField(default=1)),
                (
                    "confidence_score",
                    models.FloatField(
                        default=0.0, help_text="Confidence in indicator (0-1)"
                    ),
                ),
                ("false_positive_rate", models.FloatField(default=0.0)),
                (
                    "source",
                    models.CharField(help_text="Detection/feed source", max_length=100),
                ),
                (
                    "external_references",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="External threat intel references",
                    ),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_indicators",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threat_indicators",
                        to="core.organization",
                    ),
                ),
                (
                    "threat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indicators",
                        to="threat_intelligence.threat",
                    ),
                ),
            ],
            options={
                "verbose_name": "Threat Indicator",
                "verbose_name_plural": "Threat Indicators",
                "ordering": ["-last_seen"],
                "indexes": [
                    models.Index(
                        fields=["organization", "status"],
                        name="threat_inte_organiz_4bf58a_idx",
                    ),
                    models.Index(
                        fields=["indicator_type", "status"],
                        name="threat_inte_indicat_bd08ed_idx",
                    ),
                    models.Index(
                        fields=["severity", "-last_seen"],
                        name="threat_inte_severit_b36da4_idx",
                    ),
                    models.Index(
                        fields=["threat", "-last_seen"],
                        name="threat_inte_threat__334b3c_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ThreatFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "feed_type",
                    models.CharField(
                        choices=[
                            ("alienvault", "AlienVault OTX"),
                            ("misp", "MISP"),
                            ("threatconnect", "ThreatConnect"),
                            ("virustotal", "VirusTotal"),
                            ("custom", "Custom Feed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("api_url", models.URLField()),
                ("api_key", models.CharField(blank=True, max_length=500)),
                (
                    "authentication_method",
                    models.CharField(default="api_key", max_length=50),
                ),
                (
                    "update_frequency",
                    models.IntegerField(
                        default=3600, help_text="Update frequency in seconds"
                    ),
                ),
                ("auto_import", models.BooleanField(default=True)),
                (
                    "trust_score",
                    models.FloatField(
                        default=0.8, help_text="Trust level for this feed (0-1)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("last_error", models.TextField(blank=True)),
                ("total_indicators_imported", models.IntegerField(default=0)),
                ("last_import_count", models.IntegerField(default=0)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threat_feeds",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Threat Feed",
                "verbose_name_plural": "Threat Feeds",
                "ordering": ["name"],
                "unique_together": {("organization", "name")},
            },
        ),
        migrations.AddIndex(
            model_name="threat",
            index=models.Index(
                fields=["organization", "status", "-first_detected_at"],
                name="threat_inte_organiz_59ff63_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="threat",
            index=models.Index(
                fields=["severity", "-first_detected_at"],
                name="threat_inte_severit_517f2c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="threat",
            index=models.Index(
                fields=["threat_type", "-first_detected_at"],
                name="threat_inte_threat__c36074_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="threat",
            index=models.Index(
                fields=["-risk_score"], name="threat_inte_risk_sc_20795d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="riskassessment",
            index=models.Index(
                fields=["organization", "is_active", "-assessed_at"],
                name="threat_inte_organiz_ebcacc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="riskassessment",
            index=models.Index(
                fields=["risk_level", "-assessed_at"],
                name="threat_inte_risk_le_2ebd58_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="riskassessment",
            index=models.Index(
                fields=["assessment_type", "-assessed_at"],
                name="threat_inte_assessm_28901b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="riskassessment",
            index=models.Index(
                fields=["subject_user", "-assessed_at"],
                name="threat_inte_subject_315b94_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["organization", "status", "-triggered_at"],
                name="threat_inte_organiz_00b9e4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["severity", "status"], name="threat_inte_severit_3f8a63_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["alert_type", "-triggered_at"],
                name="threat_inte_alert_t_1d31bd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="alert",
            index=models.Index(
                fields=["user", "-triggered_at"], name="threat_inte_user_id_c3ed5d_idx"
            ),
        ),
    ]
